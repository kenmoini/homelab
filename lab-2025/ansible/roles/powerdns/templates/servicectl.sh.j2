#!/bin/bash

set -x

###################################################################################
# VARIABLES
###################################################################################

POD_NAME="{{ pdns_service_name }}"

POD_NETWORK="{{ podman_bridge_name | default('host') }}"
POD_IP="{{ pdns_ip_address }}"

{% if pdns_enable_db %}
DB_CONTAINER_SOURCE="{{ pdns_db_image }}"
DB_VOLUME_MOUNTS="-v {{ container_root_dir }}/${POD_NAME}/volumes/db:/var/lib/mysql/data:Z"
{% endif %}

AUTH_CONTAINER_SOURCE="{{ pdns_auth_image }}"
RECURSOR_CONTAINER_SOURCE="{{ pdns_recursor_image }}"
UI_CONTAINER_SOURCE="{{ pdns_ui_image }}"

AUTH_VOLUME_MOUNTS="-v {{ container_root_dir }}/${POD_NAME}/volumes/auth:/etc/pdns:Z"
RECURSOR_VOLUME_MOUNTS="-v {{ container_root_dir }}/${POD_NAME}/volumes/recursor:/etc/pdns-recursor:Z"
UI_VOLUME_MOUNTS="-v {{ container_root_dir }}/${POD_NAME}/volumes/ui:/data:Z"

###################################################################################
# EXECUTION PREFLIGHT
###################################################################################

## Ensure there is an action arguement
if [ -z "$1" ]; then
  echo "Need action arguement of 'start', 'restart', or 'stop'!"
  echo "${0} start|stop|restart"
  exit 1
fi

################################################################################### SERVICE ACTION SWITCH
case $1 in

  ################################################################################# RESTART/STOP SERVICE
  "restart" | "stop" | "start")
    echo "Stopping container services if running..."

    echo "Stopping ${POD_NAME} pod..."
    /usr/bin/podman pod kill ${POD_NAME}

    echo "Removing ${POD_NAME} pod..."
    /usr/bin/podman pod rm -f -i ${POD_NAME}
    ;;

esac


case $1 in

  ################################################################################# RESTART/START SERVICE
  "pull")
  
    echo "Pulling container images..."
{% if pdns_enable_db %}
    /usr/bin/podman pull ${DB_CONTAINER_SOURCE}
{% endif %}
    /usr/bin/podman pull ${AUTH_CONTAINER_SOURCE}
    /usr/bin/podman pull ${RECURSOR_CONTAINER_SOURCE}
    /usr/bin/podman pull ${UI_CONTAINER_SOURCE}

    ;;

  "restart" | "start")
    sleep 3

    echo "Creating Pod..."

    /usr/bin/podman pod create --name ${POD_NAME} --network ${POD_NETWORK} --ip "${POD_IP}" -p {{ pdns_auth_port }} -p {{ pdns_recursor_port }} -p {{ pdns_auth_web_port }}{% if pdns_enable_db %} -p 3306{% endif %} -p 80

{% if pdns_enable_db %}
    echo "Starting container services - DB..."

    /usr/bin/podman run -d --pod ${POD_NAME} \
      --name ${POD_NAME}-db \
      --label homepage.group=PowerDNS \
      --label homepage.name="DB" \
      --label homepage.icon=mysql.png \
      --label homepage.description='MySQL DB for PowerDNS Auth Server' \
      ${DB_VOLUME_MOUNTS} \
      ${DB_CONTAINER_SOURCE}

    if [ ! -f "{{ container_root_dir }}/${POD_NAME}/volumes/db/pdns/domains.ibd" ]; then
      /usr/bin/podman exec -it ${POD_NAME}-db sh -c 'mysql -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE < /var/lib/mysql/data/schema.sql'
      /usr/bin/podman exec -it ${POD_NAME}-db sh -c 'mysql -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE < /var/lib/mysql/data/enable_fkeys.sql'
    fi

    /usr/bin/podman exec -it ${POD_NAME}-db sh -c 'mysqlshow -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE'
{% endif %}

    echo "Starting container services - Auth..."
    /usr/bin/podman run -d --pod ${POD_NAME} \
      --name ${POD_NAME}-auth \
      --restart=always \
      --label homepage.group=Containers \
      --label homepage.name="Authoritative API" \
      --label homepage.icon=powerdns.png \
      --label homepage.href=http://ns1.kemo.labs:8081/ \
      --label homepage.description='PowerDNS Authoritative API Endpoint' \
      ${AUTH_VOLUME_MOUNTS} \
      ${AUTH_CONTAINER_SOURCE}

    echo "Starting container services - Recursor..."
    /usr/bin/podman run -d --pod ${POD_NAME} \
      --name ${POD_NAME}-recursor \
      --restart=always \
      --sysctl net.ipv4.ip_unprivileged_port_start=53 \
      --cap-add CAP_NET_BIND_SERVICE \
      --label homepage.group=Containers \
      --label homepage.name="Recursive DNS Server" \
      --label homepage.icon=powerdns.png \
      --label homepage.description='PowerDNS Recursive DNS Server on port 53,5353' \
      ${RECURSOR_VOLUME_MOUNTS} \
      ${RECURSOR_CONTAINER_SOURCE}

    echo "Starting container services - UI..."
    /usr/bin/podman run -d --rm \
      --pod ${POD_NAME} \
      --name ${POD_NAME}-ui \
      --label homepage.group=PowerDNS \
      --label homepage.name="Web UI" \
      --label homepage.icon=powerdns.png \
      --label homepage.href=https://pdns.kemo.labs/ \
      --label homepage.description='PowerDNS Web UI' \
      ${UI_VOLUME_MOUNTS} \
      ${UI_CONTAINER_SOURCE}

    ;;

esac